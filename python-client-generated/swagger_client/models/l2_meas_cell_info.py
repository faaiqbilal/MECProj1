# coding: utf-8

"""
    ETSI GS MEC 012 - Radio Network Information API

    The ETSI MEC ISG MEC012 Radio Network Information API described using OpenAPI.  # noqa: E501

    OpenAPI spec version: 2.1.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class L2MeasCellInfo(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'dl_gbr_pdr_cell': 'int',
        'dl_gbr_prb_usage_cell': 'int',
        'dl_nongbr_pdr_cell': 'int',
        'dl_nongbr_prb_usage_cell': 'int',
        'dl_total_prb_usage_cell': 'int',
        'ecgi': 'Ecgi',
        'number_of_active_ue_dl_gbr_cell': 'int',
        'number_of_active_ue_dl_nongbr_cell': 'int',
        'number_of_active_ue_ul_gbr_cell': 'int',
        'number_of_active_ue_ul_nongbr_cell': 'int',
        'received_dedicated_preambles_cell': 'int',
        'received_randomly_selected_preambles_high_range_cell': 'int',
        'received_randomly_selected_preambles_low_range_cell': 'int',
        'ul_gbr_pdr_cell': 'int',
        'ul_gbr_prb_usage_cell': 'int',
        'ul_nongbr_pdr_cell': 'int',
        'ul_nongbr_prb_usage_cell': 'int',
        'ul_total_prb_usage_cell': 'int'
    }

    attribute_map = {
        'dl_gbr_pdr_cell': 'dl_gbr_pdr_cell',
        'dl_gbr_prb_usage_cell': 'dl_gbr_prb_usage_cell',
        'dl_nongbr_pdr_cell': 'dl_nongbr_pdr_cell',
        'dl_nongbr_prb_usage_cell': 'dl_nongbr_prb_usage_cell',
        'dl_total_prb_usage_cell': 'dl_total_prb_usage_cell',
        'ecgi': 'ecgi',
        'number_of_active_ue_dl_gbr_cell': 'number_of_active_ue_dl_gbr_cell',
        'number_of_active_ue_dl_nongbr_cell': 'number_of_active_ue_dl_nongbr_cell',
        'number_of_active_ue_ul_gbr_cell': 'number_of_active_ue_ul_gbr_cell',
        'number_of_active_ue_ul_nongbr_cell': 'number_of_active_ue_ul_nongbr_cell',
        'received_dedicated_preambles_cell': 'received_dedicated_preambles_cell',
        'received_randomly_selected_preambles_high_range_cell': 'received_randomly_selected_preambles_high_range_cell',
        'received_randomly_selected_preambles_low_range_cell': 'received_randomly_selected_preambles_low_range_cell',
        'ul_gbr_pdr_cell': 'ul_gbr_pdr_cell',
        'ul_gbr_prb_usage_cell': 'ul_gbr_prb_usage_cell',
        'ul_nongbr_pdr_cell': 'ul_nongbr_pdr_cell',
        'ul_nongbr_prb_usage_cell': 'ul_nongbr_prb_usage_cell',
        'ul_total_prb_usage_cell': 'ul_total_prb_usage_cell'
    }

    def __init__(self, dl_gbr_pdr_cell=None, dl_gbr_prb_usage_cell=None, dl_nongbr_pdr_cell=None, dl_nongbr_prb_usage_cell=None, dl_total_prb_usage_cell=None, ecgi=None, number_of_active_ue_dl_gbr_cell=None, number_of_active_ue_dl_nongbr_cell=None, number_of_active_ue_ul_gbr_cell=None, number_of_active_ue_ul_nongbr_cell=None, received_dedicated_preambles_cell=None, received_randomly_selected_preambles_high_range_cell=None, received_randomly_selected_preambles_low_range_cell=None, ul_gbr_pdr_cell=None, ul_gbr_prb_usage_cell=None, ul_nongbr_pdr_cell=None, ul_nongbr_prb_usage_cell=None, ul_total_prb_usage_cell=None):  # noqa: E501
        """L2MeasCellInfo - a model defined in Swagger"""  # noqa: E501
        self._dl_gbr_pdr_cell = None
        self._dl_gbr_prb_usage_cell = None
        self._dl_nongbr_pdr_cell = None
        self._dl_nongbr_prb_usage_cell = None
        self._dl_total_prb_usage_cell = None
        self._ecgi = None
        self._number_of_active_ue_dl_gbr_cell = None
        self._number_of_active_ue_dl_nongbr_cell = None
        self._number_of_active_ue_ul_gbr_cell = None
        self._number_of_active_ue_ul_nongbr_cell = None
        self._received_dedicated_preambles_cell = None
        self._received_randomly_selected_preambles_high_range_cell = None
        self._received_randomly_selected_preambles_low_range_cell = None
        self._ul_gbr_pdr_cell = None
        self._ul_gbr_prb_usage_cell = None
        self._ul_nongbr_pdr_cell = None
        self._ul_nongbr_prb_usage_cell = None
        self._ul_total_prb_usage_cell = None
        self.discriminator = None
        if dl_gbr_pdr_cell is not None:
            self.dl_gbr_pdr_cell = dl_gbr_pdr_cell
        if dl_gbr_prb_usage_cell is not None:
            self.dl_gbr_prb_usage_cell = dl_gbr_prb_usage_cell
        if dl_nongbr_pdr_cell is not None:
            self.dl_nongbr_pdr_cell = dl_nongbr_pdr_cell
        if dl_nongbr_prb_usage_cell is not None:
            self.dl_nongbr_prb_usage_cell = dl_nongbr_prb_usage_cell
        if dl_total_prb_usage_cell is not None:
            self.dl_total_prb_usage_cell = dl_total_prb_usage_cell
        if ecgi is not None:
            self.ecgi = ecgi
        if number_of_active_ue_dl_gbr_cell is not None:
            self.number_of_active_ue_dl_gbr_cell = number_of_active_ue_dl_gbr_cell
        if number_of_active_ue_dl_nongbr_cell is not None:
            self.number_of_active_ue_dl_nongbr_cell = number_of_active_ue_dl_nongbr_cell
        if number_of_active_ue_ul_gbr_cell is not None:
            self.number_of_active_ue_ul_gbr_cell = number_of_active_ue_ul_gbr_cell
        if number_of_active_ue_ul_nongbr_cell is not None:
            self.number_of_active_ue_ul_nongbr_cell = number_of_active_ue_ul_nongbr_cell
        if received_dedicated_preambles_cell is not None:
            self.received_dedicated_preambles_cell = received_dedicated_preambles_cell
        if received_randomly_selected_preambles_high_range_cell is not None:
            self.received_randomly_selected_preambles_high_range_cell = received_randomly_selected_preambles_high_range_cell
        if received_randomly_selected_preambles_low_range_cell is not None:
            self.received_randomly_selected_preambles_low_range_cell = received_randomly_selected_preambles_low_range_cell
        if ul_gbr_pdr_cell is not None:
            self.ul_gbr_pdr_cell = ul_gbr_pdr_cell
        if ul_gbr_prb_usage_cell is not None:
            self.ul_gbr_prb_usage_cell = ul_gbr_prb_usage_cell
        if ul_nongbr_pdr_cell is not None:
            self.ul_nongbr_pdr_cell = ul_nongbr_pdr_cell
        if ul_nongbr_prb_usage_cell is not None:
            self.ul_nongbr_prb_usage_cell = ul_nongbr_prb_usage_cell
        if ul_total_prb_usage_cell is not None:
            self.ul_total_prb_usage_cell = ul_total_prb_usage_cell

    @property
    def dl_gbr_pdr_cell(self):
        """Gets the dl_gbr_pdr_cell of this L2MeasCellInfo.  # noqa: E501

        It indicates the packet discard rate in percentage of the downlink GBR traffic in a cell, as defined in ETSI TS 136 314 [i.11].  # noqa: E501

        :return: The dl_gbr_pdr_cell of this L2MeasCellInfo.  # noqa: E501
        :rtype: int
        """
        return self._dl_gbr_pdr_cell

    @dl_gbr_pdr_cell.setter
    def dl_gbr_pdr_cell(self, dl_gbr_pdr_cell):
        """Sets the dl_gbr_pdr_cell of this L2MeasCellInfo.

        It indicates the packet discard rate in percentage of the downlink GBR traffic in a cell, as defined in ETSI TS 136 314 [i.11].  # noqa: E501

        :param dl_gbr_pdr_cell: The dl_gbr_pdr_cell of this L2MeasCellInfo.  # noqa: E501
        :type: int
        """

        self._dl_gbr_pdr_cell = dl_gbr_pdr_cell

    @property
    def dl_gbr_prb_usage_cell(self):
        """Gets the dl_gbr_prb_usage_cell of this L2MeasCellInfo.  # noqa: E501

        It indicates the PRB usage for downlink GBR traffic, as defined in ETSI TS 136 314 [i.11] and ETSI TS 136 423 [i.12].  # noqa: E501

        :return: The dl_gbr_prb_usage_cell of this L2MeasCellInfo.  # noqa: E501
        :rtype: int
        """
        return self._dl_gbr_prb_usage_cell

    @dl_gbr_prb_usage_cell.setter
    def dl_gbr_prb_usage_cell(self, dl_gbr_prb_usage_cell):
        """Sets the dl_gbr_prb_usage_cell of this L2MeasCellInfo.

        It indicates the PRB usage for downlink GBR traffic, as defined in ETSI TS 136 314 [i.11] and ETSI TS 136 423 [i.12].  # noqa: E501

        :param dl_gbr_prb_usage_cell: The dl_gbr_prb_usage_cell of this L2MeasCellInfo.  # noqa: E501
        :type: int
        """

        self._dl_gbr_prb_usage_cell = dl_gbr_prb_usage_cell

    @property
    def dl_nongbr_pdr_cell(self):
        """Gets the dl_nongbr_pdr_cell of this L2MeasCellInfo.  # noqa: E501

        It indicates the packet discard rate in percentage of the downlink non-GBR traffic in a cell, as defined in ETSI TS 136 314 [i.11].  # noqa: E501

        :return: The dl_nongbr_pdr_cell of this L2MeasCellInfo.  # noqa: E501
        :rtype: int
        """
        return self._dl_nongbr_pdr_cell

    @dl_nongbr_pdr_cell.setter
    def dl_nongbr_pdr_cell(self, dl_nongbr_pdr_cell):
        """Sets the dl_nongbr_pdr_cell of this L2MeasCellInfo.

        It indicates the packet discard rate in percentage of the downlink non-GBR traffic in a cell, as defined in ETSI TS 136 314 [i.11].  # noqa: E501

        :param dl_nongbr_pdr_cell: The dl_nongbr_pdr_cell of this L2MeasCellInfo.  # noqa: E501
        :type: int
        """

        self._dl_nongbr_pdr_cell = dl_nongbr_pdr_cell

    @property
    def dl_nongbr_prb_usage_cell(self):
        """Gets the dl_nongbr_prb_usage_cell of this L2MeasCellInfo.  # noqa: E501

        It indicates (in percentage) the PRB usage for downlink non-GBR traffic, as defined in ETSI TS 136 314 [i.11] and ETSI TS 136 423 [i.12].  # noqa: E501

        :return: The dl_nongbr_prb_usage_cell of this L2MeasCellInfo.  # noqa: E501
        :rtype: int
        """
        return self._dl_nongbr_prb_usage_cell

    @dl_nongbr_prb_usage_cell.setter
    def dl_nongbr_prb_usage_cell(self, dl_nongbr_prb_usage_cell):
        """Sets the dl_nongbr_prb_usage_cell of this L2MeasCellInfo.

        It indicates (in percentage) the PRB usage for downlink non-GBR traffic, as defined in ETSI TS 136 314 [i.11] and ETSI TS 136 423 [i.12].  # noqa: E501

        :param dl_nongbr_prb_usage_cell: The dl_nongbr_prb_usage_cell of this L2MeasCellInfo.  # noqa: E501
        :type: int
        """

        self._dl_nongbr_prb_usage_cell = dl_nongbr_prb_usage_cell

    @property
    def dl_total_prb_usage_cell(self):
        """Gets the dl_total_prb_usage_cell of this L2MeasCellInfo.  # noqa: E501

        It indicates (in percentage) the PRB usage for total downlink traffic, as defined in ETSI TS 136 314 [i.11] and ETSI TS 136 423 [i.12].  # noqa: E501

        :return: The dl_total_prb_usage_cell of this L2MeasCellInfo.  # noqa: E501
        :rtype: int
        """
        return self._dl_total_prb_usage_cell

    @dl_total_prb_usage_cell.setter
    def dl_total_prb_usage_cell(self, dl_total_prb_usage_cell):
        """Sets the dl_total_prb_usage_cell of this L2MeasCellInfo.

        It indicates (in percentage) the PRB usage for total downlink traffic, as defined in ETSI TS 136 314 [i.11] and ETSI TS 136 423 [i.12].  # noqa: E501

        :param dl_total_prb_usage_cell: The dl_total_prb_usage_cell of this L2MeasCellInfo.  # noqa: E501
        :type: int
        """

        self._dl_total_prb_usage_cell = dl_total_prb_usage_cell

    @property
    def ecgi(self):
        """Gets the ecgi of this L2MeasCellInfo.  # noqa: E501


        :return: The ecgi of this L2MeasCellInfo.  # noqa: E501
        :rtype: Ecgi
        """
        return self._ecgi

    @ecgi.setter
    def ecgi(self, ecgi):
        """Sets the ecgi of this L2MeasCellInfo.


        :param ecgi: The ecgi of this L2MeasCellInfo.  # noqa: E501
        :type: Ecgi
        """

        self._ecgi = ecgi

    @property
    def number_of_active_ue_dl_gbr_cell(self):
        """Gets the number_of_active_ue_dl_gbr_cell of this L2MeasCellInfo.  # noqa: E501

        It indicates the number of active UEs with downlink GBR traffic, as defined in ETSI TS 136 314 [i.11].  # noqa: E501

        :return: The number_of_active_ue_dl_gbr_cell of this L2MeasCellInfo.  # noqa: E501
        :rtype: int
        """
        return self._number_of_active_ue_dl_gbr_cell

    @number_of_active_ue_dl_gbr_cell.setter
    def number_of_active_ue_dl_gbr_cell(self, number_of_active_ue_dl_gbr_cell):
        """Sets the number_of_active_ue_dl_gbr_cell of this L2MeasCellInfo.

        It indicates the number of active UEs with downlink GBR traffic, as defined in ETSI TS 136 314 [i.11].  # noqa: E501

        :param number_of_active_ue_dl_gbr_cell: The number_of_active_ue_dl_gbr_cell of this L2MeasCellInfo.  # noqa: E501
        :type: int
        """

        self._number_of_active_ue_dl_gbr_cell = number_of_active_ue_dl_gbr_cell

    @property
    def number_of_active_ue_dl_nongbr_cell(self):
        """Gets the number_of_active_ue_dl_nongbr_cell of this L2MeasCellInfo.  # noqa: E501

        It indicates the number of active UEs with downlink non-GBR traffic, as defined in ETSI TS 136 314 [i.11].  # noqa: E501

        :return: The number_of_active_ue_dl_nongbr_cell of this L2MeasCellInfo.  # noqa: E501
        :rtype: int
        """
        return self._number_of_active_ue_dl_nongbr_cell

    @number_of_active_ue_dl_nongbr_cell.setter
    def number_of_active_ue_dl_nongbr_cell(self, number_of_active_ue_dl_nongbr_cell):
        """Sets the number_of_active_ue_dl_nongbr_cell of this L2MeasCellInfo.

        It indicates the number of active UEs with downlink non-GBR traffic, as defined in ETSI TS 136 314 [i.11].  # noqa: E501

        :param number_of_active_ue_dl_nongbr_cell: The number_of_active_ue_dl_nongbr_cell of this L2MeasCellInfo.  # noqa: E501
        :type: int
        """

        self._number_of_active_ue_dl_nongbr_cell = number_of_active_ue_dl_nongbr_cell

    @property
    def number_of_active_ue_ul_gbr_cell(self):
        """Gets the number_of_active_ue_ul_gbr_cell of this L2MeasCellInfo.  # noqa: E501

        It indicates the number of active UEs with uplink GBR traffic, as defined in ETSI TS 136 314 [i.11].  # noqa: E501

        :return: The number_of_active_ue_ul_gbr_cell of this L2MeasCellInfo.  # noqa: E501
        :rtype: int
        """
        return self._number_of_active_ue_ul_gbr_cell

    @number_of_active_ue_ul_gbr_cell.setter
    def number_of_active_ue_ul_gbr_cell(self, number_of_active_ue_ul_gbr_cell):
        """Sets the number_of_active_ue_ul_gbr_cell of this L2MeasCellInfo.

        It indicates the number of active UEs with uplink GBR traffic, as defined in ETSI TS 136 314 [i.11].  # noqa: E501

        :param number_of_active_ue_ul_gbr_cell: The number_of_active_ue_ul_gbr_cell of this L2MeasCellInfo.  # noqa: E501
        :type: int
        """

        self._number_of_active_ue_ul_gbr_cell = number_of_active_ue_ul_gbr_cell

    @property
    def number_of_active_ue_ul_nongbr_cell(self):
        """Gets the number_of_active_ue_ul_nongbr_cell of this L2MeasCellInfo.  # noqa: E501

        It indicates the number of active UEs with uplink non-GBR traffic, as defined in ETSI TS 136 314 [i.11].  # noqa: E501

        :return: The number_of_active_ue_ul_nongbr_cell of this L2MeasCellInfo.  # noqa: E501
        :rtype: int
        """
        return self._number_of_active_ue_ul_nongbr_cell

    @number_of_active_ue_ul_nongbr_cell.setter
    def number_of_active_ue_ul_nongbr_cell(self, number_of_active_ue_ul_nongbr_cell):
        """Sets the number_of_active_ue_ul_nongbr_cell of this L2MeasCellInfo.

        It indicates the number of active UEs with uplink non-GBR traffic, as defined in ETSI TS 136 314 [i.11].  # noqa: E501

        :param number_of_active_ue_ul_nongbr_cell: The number_of_active_ue_ul_nongbr_cell of this L2MeasCellInfo.  # noqa: E501
        :type: int
        """

        self._number_of_active_ue_ul_nongbr_cell = number_of_active_ue_ul_nongbr_cell

    @property
    def received_dedicated_preambles_cell(self):
        """Gets the received_dedicated_preambles_cell of this L2MeasCellInfo.  # noqa: E501

        It indicates (in percentage) the received dedicated preamples, as defined in ETSI TS 136 314 [i.11].  # noqa: E501

        :return: The received_dedicated_preambles_cell of this L2MeasCellInfo.  # noqa: E501
        :rtype: int
        """
        return self._received_dedicated_preambles_cell

    @received_dedicated_preambles_cell.setter
    def received_dedicated_preambles_cell(self, received_dedicated_preambles_cell):
        """Sets the received_dedicated_preambles_cell of this L2MeasCellInfo.

        It indicates (in percentage) the received dedicated preamples, as defined in ETSI TS 136 314 [i.11].  # noqa: E501

        :param received_dedicated_preambles_cell: The received_dedicated_preambles_cell of this L2MeasCellInfo.  # noqa: E501
        :type: int
        """

        self._received_dedicated_preambles_cell = received_dedicated_preambles_cell

    @property
    def received_randomly_selected_preambles_high_range_cell(self):
        """Gets the received_randomly_selected_preambles_high_range_cell of this L2MeasCellInfo.  # noqa: E501

        It indicates (in percentage) the received randomly selected preambles in the high range, as defined in ETSI TS 136 314 [i.11].  # noqa: E501

        :return: The received_randomly_selected_preambles_high_range_cell of this L2MeasCellInfo.  # noqa: E501
        :rtype: int
        """
        return self._received_randomly_selected_preambles_high_range_cell

    @received_randomly_selected_preambles_high_range_cell.setter
    def received_randomly_selected_preambles_high_range_cell(self, received_randomly_selected_preambles_high_range_cell):
        """Sets the received_randomly_selected_preambles_high_range_cell of this L2MeasCellInfo.

        It indicates (in percentage) the received randomly selected preambles in the high range, as defined in ETSI TS 136 314 [i.11].  # noqa: E501

        :param received_randomly_selected_preambles_high_range_cell: The received_randomly_selected_preambles_high_range_cell of this L2MeasCellInfo.  # noqa: E501
        :type: int
        """

        self._received_randomly_selected_preambles_high_range_cell = received_randomly_selected_preambles_high_range_cell

    @property
    def received_randomly_selected_preambles_low_range_cell(self):
        """Gets the received_randomly_selected_preambles_low_range_cell of this L2MeasCellInfo.  # noqa: E501

        It indicates (in percentage) the received randomly selected preambles in the low range, as defined in ETSI TS 136 314 [i.11].  # noqa: E501

        :return: The received_randomly_selected_preambles_low_range_cell of this L2MeasCellInfo.  # noqa: E501
        :rtype: int
        """
        return self._received_randomly_selected_preambles_low_range_cell

    @received_randomly_selected_preambles_low_range_cell.setter
    def received_randomly_selected_preambles_low_range_cell(self, received_randomly_selected_preambles_low_range_cell):
        """Sets the received_randomly_selected_preambles_low_range_cell of this L2MeasCellInfo.

        It indicates (in percentage) the received randomly selected preambles in the low range, as defined in ETSI TS 136 314 [i.11].  # noqa: E501

        :param received_randomly_selected_preambles_low_range_cell: The received_randomly_selected_preambles_low_range_cell of this L2MeasCellInfo.  # noqa: E501
        :type: int
        """

        self._received_randomly_selected_preambles_low_range_cell = received_randomly_selected_preambles_low_range_cell

    @property
    def ul_gbr_pdr_cell(self):
        """Gets the ul_gbr_pdr_cell of this L2MeasCellInfo.  # noqa: E501

        It indicates the packet discard rate in percentage of the uplink GBR traffic in a cell, as defined in ETSI TS 136 314 [i.11].  # noqa: E501

        :return: The ul_gbr_pdr_cell of this L2MeasCellInfo.  # noqa: E501
        :rtype: int
        """
        return self._ul_gbr_pdr_cell

    @ul_gbr_pdr_cell.setter
    def ul_gbr_pdr_cell(self, ul_gbr_pdr_cell):
        """Sets the ul_gbr_pdr_cell of this L2MeasCellInfo.

        It indicates the packet discard rate in percentage of the uplink GBR traffic in a cell, as defined in ETSI TS 136 314 [i.11].  # noqa: E501

        :param ul_gbr_pdr_cell: The ul_gbr_pdr_cell of this L2MeasCellInfo.  # noqa: E501
        :type: int
        """

        self._ul_gbr_pdr_cell = ul_gbr_pdr_cell

    @property
    def ul_gbr_prb_usage_cell(self):
        """Gets the ul_gbr_prb_usage_cell of this L2MeasCellInfo.  # noqa: E501

        It indicates (in percentage) the PRB usage for uplink GBR traffic, as defined in ETSI TS 136 314 [i.11] and ETSI TS 136 423 [i.12].  # noqa: E501

        :return: The ul_gbr_prb_usage_cell of this L2MeasCellInfo.  # noqa: E501
        :rtype: int
        """
        return self._ul_gbr_prb_usage_cell

    @ul_gbr_prb_usage_cell.setter
    def ul_gbr_prb_usage_cell(self, ul_gbr_prb_usage_cell):
        """Sets the ul_gbr_prb_usage_cell of this L2MeasCellInfo.

        It indicates (in percentage) the PRB usage for uplink GBR traffic, as defined in ETSI TS 136 314 [i.11] and ETSI TS 136 423 [i.12].  # noqa: E501

        :param ul_gbr_prb_usage_cell: The ul_gbr_prb_usage_cell of this L2MeasCellInfo.  # noqa: E501
        :type: int
        """

        self._ul_gbr_prb_usage_cell = ul_gbr_prb_usage_cell

    @property
    def ul_nongbr_pdr_cell(self):
        """Gets the ul_nongbr_pdr_cell of this L2MeasCellInfo.  # noqa: E501

        It indicates the packet discard rate in percentage of the uplink non-GBR traffic in a cell, as defined in ETSI TS 136 314 [i.11].  # noqa: E501

        :return: The ul_nongbr_pdr_cell of this L2MeasCellInfo.  # noqa: E501
        :rtype: int
        """
        return self._ul_nongbr_pdr_cell

    @ul_nongbr_pdr_cell.setter
    def ul_nongbr_pdr_cell(self, ul_nongbr_pdr_cell):
        """Sets the ul_nongbr_pdr_cell of this L2MeasCellInfo.

        It indicates the packet discard rate in percentage of the uplink non-GBR traffic in a cell, as defined in ETSI TS 136 314 [i.11].  # noqa: E501

        :param ul_nongbr_pdr_cell: The ul_nongbr_pdr_cell of this L2MeasCellInfo.  # noqa: E501
        :type: int
        """

        self._ul_nongbr_pdr_cell = ul_nongbr_pdr_cell

    @property
    def ul_nongbr_prb_usage_cell(self):
        """Gets the ul_nongbr_prb_usage_cell of this L2MeasCellInfo.  # noqa: E501

        It indicates (in percentage) the PRB usage for uplink non-GBR traffic, as defined in ETSI TS 136 314 [i.11] and ETSI TS 136 423 [i.12].  # noqa: E501

        :return: The ul_nongbr_prb_usage_cell of this L2MeasCellInfo.  # noqa: E501
        :rtype: int
        """
        return self._ul_nongbr_prb_usage_cell

    @ul_nongbr_prb_usage_cell.setter
    def ul_nongbr_prb_usage_cell(self, ul_nongbr_prb_usage_cell):
        """Sets the ul_nongbr_prb_usage_cell of this L2MeasCellInfo.

        It indicates (in percentage) the PRB usage for uplink non-GBR traffic, as defined in ETSI TS 136 314 [i.11] and ETSI TS 136 423 [i.12].  # noqa: E501

        :param ul_nongbr_prb_usage_cell: The ul_nongbr_prb_usage_cell of this L2MeasCellInfo.  # noqa: E501
        :type: int
        """

        self._ul_nongbr_prb_usage_cell = ul_nongbr_prb_usage_cell

    @property
    def ul_total_prb_usage_cell(self):
        """Gets the ul_total_prb_usage_cell of this L2MeasCellInfo.  # noqa: E501

        It indicates (in percentage) the PRB usage for total uplink traffic, as defined in ETSI TS 136 314 [i.11] and ETSI TS 136 423 [i.12].  # noqa: E501

        :return: The ul_total_prb_usage_cell of this L2MeasCellInfo.  # noqa: E501
        :rtype: int
        """
        return self._ul_total_prb_usage_cell

    @ul_total_prb_usage_cell.setter
    def ul_total_prb_usage_cell(self, ul_total_prb_usage_cell):
        """Sets the ul_total_prb_usage_cell of this L2MeasCellInfo.

        It indicates (in percentage) the PRB usage for total uplink traffic, as defined in ETSI TS 136 314 [i.11] and ETSI TS 136 423 [i.12].  # noqa: E501

        :param ul_total_prb_usage_cell: The ul_total_prb_usage_cell of this L2MeasCellInfo.  # noqa: E501
        :type: int
        """

        self._ul_total_prb_usage_cell = ul_total_prb_usage_cell

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(L2MeasCellInfo, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, L2MeasCellInfo):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
